/*!
 * Maybe v1.0.0
 * (c) Sven Schmidt 
 * License: MIT (http://www.opensource.org/licenses/mit-license.php)
 */

"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol?"symbol":typeof a};!function(a){var b=this||(0,eval)("this");"function"==typeof define&&define.amd?define(["exports","require"],function(){return a}):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))&&"object"===("undefined"==typeof module?"undefined":_typeof(module))?exports=module.exports=a:b.Maybe=a}(function(){function a(a){this[c]=a}function b(b){a.call(this,b)}var c=Symbol("value");a.prototype=function(){function b(){return null===this[c]}function d(){var a=this[c];return a!==a}function e(){return"undefined"==typeof this[c]}function f(){return this.isNull()||this.isUndefined()||this.isNaN()}function g(b){return this.isNothing()?a.nothing:a.of(b(this[c]))}function h(b){return this.isNothing()?a.of(b):this}function i(a){return this.orDefault(a)}function j(b){if(this.isNothing())return this;b=[].concat(b).reverse();for(var d=this,e=this[c];!d.isNothing()&&b.length>0;e=e[b.pop()],d=a.of(e));return d.isNothing()?a.nothing:d}function k(){return this.isNothing()?a.nothing:this[c]}function l(){return this.join()}function m(a){return this.map(a).join()}function n(){return"[object Maybe]"}return{isNull:b,isNaN:d,isUndefined:e,isNothing:f,map:g,orDefault:h,or:i,get:j,join:k,value:l,chain:m,toString:n}}(),b.prototype=function(){function b(){if(this.isNothing())return a.nothing;for(var b=arguments.length,d=Array(b),e=0;e<b;e++)d[e]=arguments[e];return a.of(this[c].apply(this[c],d.map(function(b){return a.of(b).join()})))}function d(){return"[object MaybeFunction]"}return{apply:b,toString:d}}(),b.prototype=Object.assign.call({},a.prototype,b.prototype);var d=function(b){return a.of(b)};return d.of=a.of=function(c){return"function"==typeof c?new b(c):a.isMaybe(c)?c:new a(c)},d.isMaybe=a.isMaybe=function(a){return/maybe/i.test(Object(a).toString())},d.nothing=a.nothing=a.of(null),d}());